// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN
        in[16],
        load,
        address[14];
    OUT
        out[16];

    PARTS:
        Mux4Way16(a=ram-0, b=ram-1, c=ram-2, d=ram-3,
                  sel=address[12..13],
                  out=out);

        DMux4Way(a=ram-0-load, b=ram-1-load, c=ram-2-load, d=ram-3-load,
                 in=load, sel=address[12..13]);

        RAM4K(in=in, load=ram-0-load, address=address[0..11], out=ram-0);
        RAM4K(in=in, load=ram-1-load, address=address[0..11], out=ram-1);
        RAM4K(in=in, load=ram-2-load, address=address[0..11], out=ram-2);
        RAM4K(in=in, load=ram-3-load, address=address[0..11], out=ram-3);
}
